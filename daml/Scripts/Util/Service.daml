module Scripts.Util.Service where

import Daml.Script

import Daml.Finance.Interface.Account.Factory qualified as Account (F)
import Daml.Finance.Interface.Holding.Factory qualified as Holding (F)

import Workflow.Custody.Service qualified as Custody

createCustodyServiceWithRequest
  :  Party -> Party -> Party
  -> ContractId Account.F -> ContractId Holding.F -> Script (ContractId Custody.Service)
createCustodyServiceWithRequest operator provider customer accountFactoryCid holdingFactoryCid = do
  serviceRequestCid <- submit customer do createCmd Custody.Request with ..
  submit provider do exerciseCmd serviceRequestCid Custody.Approve with ..

createCustodyServiceWithOffer
  :  Party -> Party -> Party
  -> ContractId Account.F -> ContractId Holding.F -> Script (ContractId Custody.Service)
createCustodyServiceWithOffer operator provider customer accountFactoryCid holdingFactoryCid = do
  serviceOfferCid <- submit provider do createCmd Custody.Offer with ..
  submit customer do exerciseCmd serviceOfferCid Custody.Accept

terminateCustodyService : Party -> Party -> Party -> Script ()
terminateCustodyService custodian owner actor = do
  submit actor do exerciseByKeyCmd @Custody.Service (custodian, owner) Custody.Terminate with ..